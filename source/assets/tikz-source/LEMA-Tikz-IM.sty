\ProvidesPackage{LEMA-Tikz-IM}

\typeout{Enrique Acosta - 2024}

\usepackage{tikz,pgfplots,amsmath,xcolor}

\usepackage{sansmath}
\usepackage{sfmath}
% \usepackage[default,scale=0.95]{opensans}
% \usepackage[T1]{fontenc}
\usetikzlibrary{
    fit,
    calc,
    intersections,
    % positioning,
    % arrows,
    % arrows.meta,
    % shapes.geometric,
    % shapes,
    % matrix,
    % shapes.symbols,
    % backgrounds,
    % decorations,
    % decorations.pathreplacing,
    % decorations.pathmorphing,
    % decorations.markings,
    % arrows,
    % patterns,
    % fillbetween,
}


\tikzset{every node/.append style={font=\gradeFontSize\sansmath\sffamily}}
\tikzset{every picture/.append style={line join=round}}
\tikzset{every picture/.append style={line width=1pt}}


%%%%%%%%%%%%%%%%%%%
% Dice and dot groups
%%%%%%%%%%%%%%%%%%%
\def\midDotSize{0.6cm}
\tikzstyle{midDot}=[circle, draw, fill=cyan!60, minimum size = \midDotSize]
\tikzstyle{midDotRoundedRect}=[draw, rectangle, rounded corners=0.5*\midDotSize, inner sep=3*\midDotSize/10]

% ------------------------------------------
% Usage: \midDotGroup[rotate=30, shift={(1,3)}]{x-num}{y-num}
% Creates named coordinates (dot-2-3) 
\newcommand{\midDotGroup}[3][]{
  \begin{scope}[#1]
      \foreach \x in {1,...,#2}{
        \foreach \y in {1,...,#3}{
          \node[midDot, xshift=\x*1.3*\midDotSize, yshift=\y*1.3*\midDotSize] 
               (dot-\x-\y) at (0,0) {};
        }
      }
      % Rounded box around all the dots
      \node[midDotRoundedRect=0.6*\midDotSize, fit=(dot-1-1) (dot-#2-#3)] (roundedRect) {};
  \end{scope}
}

% DICE
\def\diceDotSize{\midDotSize}
\tikzstyle{diceDot}=[circle, draw, fill=cyan!60, minimum size = \diceDotSize]
\tikzstyle{diceEdge}=[draw, rectangle, rounded corners=0.5*\diceDotSize, inner sep=3*\diceDotSize/10]
% ------------------------------------------
% Usage: \diceThree[shift={(5*\diceDotSize,0)}]
% Make sure to always use shifts in terms of \diceDotSize so that \diceDotSize can be changed without breaking all the figures.
% Extras:
% -  Creates named coordinates (dot-2-3) 
% -  Creates named node for the edge of the dice (diceEdge)
% -  Example:
%    \diceThree
%    \node[above] at (diceEdge.north) {hello};

\newcommand{\drawDiceDotsAndEdgeFor}[2][]{
  \foreach \x/\y in {#2}{
      \node[diceDot, xshift=\x*1.3*\diceDotSize, yshift=\y*1.3*\diceDotSize,#1] 
           (dot-\x-\y) at (0,0) {};
    }
  % Rounded box around all the dots
  \node[diceEdge, fit=(dot-1-1) (dot-3-3)] (diceEdge) {};
}

\newcommand{\diceThree}[1][]{
  \begin{scope}[#1]
    \drawDiceDotsAndEdgeFor{1/1,2/2,3/3}
  \end{scope}
}

\newcommand{\diceFive}[1][]{
  \begin{scope}[#1]
    \drawDiceDotsAndEdgeFor{1/1,2/2,3/3,1/3,3/1}
  \end{scope}
}

\newcommand{\diceSix}[1][]{
  \begin{scope}[#1]
    \drawDiceDotsAndEdgeFor{1/1,1/2,1/3,3/1,3/2,3/3}
  \end{scope}
}

\newcommand{\diceTwo}[1][]{
  \begin{scope}[#1]
    \drawDiceDotsAndEdgeFor{1/1,3/3}
  \end{scope}
}

\newcommand{\diceFour}[1][]{
  \begin{scope}[#1]
    \drawDiceDotsAndEdgeFor{1/1,3/3,1/3,3/1}
  \end{scope}
}

\newcommand{\diceOne}[1][]{
  \begin{scope}[#1]
    % draw=none for (dot-1-1) and (dot-3-3) to be able to fit the dice edge
    \drawDiceDotsAndEdgeFor[draw=none, fill=none]{1/1,3/3}
    \drawDiceDotsAndEdgeFor{2/2}
  \end{scope}
}

